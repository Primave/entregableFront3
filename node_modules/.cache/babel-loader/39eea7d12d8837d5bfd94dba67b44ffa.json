{"ast":null,"code":"var _jsxFileName = \"C:\\\\DH2\\\\Frontend III\\\\entregableFront3\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    item,\n    contador,\n    somarContador\n  } = _ref;\n  const {\n    total,\n    setTotal\n  } = React.useState(item.stock);\n  const {\n    habilitado,\n    setHabilitado\n  } = React.useState(true);\n\n  const buy = () => {\n    if (total > 0) {\n      setTotal(total - 1);\n      somarContador();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [console.log(item.stock), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", item.producto.nombre, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", item.producto.descripcion, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock: \", item.stock > 0 ? item.stock : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Agotado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 52\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), console.log(habilitado), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buy,\n      children: item.stock > 0 ? 'Comprar' : 'Sin Stock'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"5fPrFS7Fy4Lgs0qAt2bdYY8/Ztg=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","Item","item","contador","somarContador","total","setTotal","useState","stock","habilitado","setHabilitado","buy","console","log","producto","nombre","descripcion"],"sources":["C:/DH2/Frontend III/entregableFront3/src/components/Item.js"],"sourcesContent":["import React from 'react';\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item({item, contador, somarContador}) {\r\n\r\nconst {total, setTotal} = React.useState(item.stock);\r\nconst {habilitado, setHabilitado} = React.useState(true);\r\n\r\n\r\nconst buy = () => {\r\n  \r\n\r\n  if (total > 0) {\r\n    setTotal (total - 1);\r\n    somarContador();\r\n  }\r\n }\r\n\r\n  return (\r\n   \r\n    <div className='producto'>\r\n      {console.log(item.stock)}\r\n        <h3> {item.producto.nombre} </h3>\r\n        <p> {item.producto.descripcion} </p>\r\n        <h5>En stock: {item.stock > 0 ? item.stock:<span>Agotado</span>} </h5>\r\n    \r\n        {console.log(habilitado)}\r\n        <button onClick={buy} > \r\n        {item.stock > 0 ? 'Comprar':'Sin Stock'} \r\n        </button>\r\n\r\n\r\n    </div>\r\n \r\n  )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,OAA+C;EAAA;;EAAA,IAAjC;IAACC,IAAD;IAAOC,QAAP;IAAiBC;EAAjB,CAAiC;EAE9D,MAAM;IAACC,KAAD;IAAQC;EAAR,IAAoBN,KAAK,CAACO,QAAN,CAAeL,IAAI,CAACM,KAApB,CAA1B;EACA,MAAM;IAACC,UAAD;IAAaC;EAAb,IAA8BV,KAAK,CAACO,QAAN,CAAe,IAAf,CAApC;;EAGA,MAAMI,GAAG,GAAG,MAAM;IAGhB,IAAIN,KAAK,GAAG,CAAZ,EAAe;MACbC,QAAQ,CAAED,KAAK,GAAG,CAAV,CAAR;MACAD,aAAa;IACd;EACD,CAPF;;EASE,oBAEE;IAAK,SAAS,EAAC,UAAf;IAAA,WACGQ,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACM,KAAjB,CADH,eAEI;MAAA,gBAAMN,IAAI,CAACY,QAAL,CAAcC,MAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,gBAAKb,IAAI,CAACY,QAAL,CAAcE,WAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA,yBAAed,IAAI,CAACM,KAAL,GAAa,CAAb,GAAiBN,IAAI,CAACM,KAAtB,gBAA4B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA3C;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,EAMKI,OAAO,CAACC,GAAR,CAAYJ,UAAZ,CANL,eAOI;MAAQ,OAAO,EAAEE,GAAjB;MAAA,UACCT,IAAI,CAACM,KAAL,GAAa,CAAb,GAAiB,SAAjB,GAA2B;IAD5B;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAiBD;;GAhCuBP,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}